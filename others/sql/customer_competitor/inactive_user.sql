-- Bank connection user

WITH MEMBER_CHIME AS
(
    SELECT
        USER_ID,
        HAS_CHIME_SPOTME_L30D,
        LOWEST_CHIME_BAL_L30D_AMT_USD
    FROM DBT.ADV_CHURN_MARTS.FCT_CHIME_NEG_BAL
    WHERE REF_DATE = CURRENT_DATE() -1
),
MEMBER_NONCHIME AS
(
    SELECT
        USER_ID,
        NONCHIME_COMPETITOR_FUNDING_TXN_N30D_CNT,
        NONCHIME_COMPETITOR_FUNDING_TXN_N30D_AMT_USD
    FROM DBT.ADV_CHURN_MARTS.FCT_NONCHIME_COMPETITOR_TXN
    WHERE REF_DATE = CURRENT_DATE() -1


),
MEMBER_SEGMENT AS
(
    SELECT
        USER_ID,
        USER_LABEL,
        FIRST_ADVANCE_DATE,
        LAST_ADVANCE_DATE
    FROM DBT.ADV_CHURN_MARTS.fct_adv_segment
    WHERE DATE_OF_INTEREST = CURRENT_DATE() - 1
),
BANK_CONNECTION_INACTIVEUSER AS
(
    SELECT
        A.USER_ID,
        MIN(A.INITIAL_PULL) AS BANK_CONNECTION_DATE
    FROM APPLICATION_DB.GOOGLE_CLOUD_MYSQL_DAVE.BANK_CONNECTION A
    JOIN ANALYTIC_DB.NEW_USER_ATTRIBUTION B
    WHERE A.INITIAL_PULL < DATEADD('DAY', -31, CURRENT_DATE())
        AND B.FIRST_ADVANCE_TIMESTAMP IS NULL
    GROUP BY A.USER_ID
),
INACTIVE_MEMBER AS
(
    SELECT
        A.USER_ID,
        A.BANK_CONNECTION_DATE,
        B.IS_APPROVED,
        B.IS_DISBURSED
    FROM BANK_CONNECTION_INACTIVEUSER A
    LEFT JOIN ANALYTIC_DB.DBT_MARTS.REQUESTS B
    ON A.USER_ID = B.USER_ID
),
INACTIVE_MEMBER_GROUP AS
(
    SELECT
        USER_ID,
        BANK_CONNECTION_DATE,
        SUM(IS_APPROVED) AS IS_APPROVED_SUM,
        SUM(IS_DISBURSED) AS IS_DISBURSED_SUM
    FROM INACTIVE_MEMBER
    GROUP BY USER_ID, BANK_CONNECTION_DATE
),
INACTIVE_MEMBER_CHIME AS
(
    SELECT
        A.USER_ID,
        A.BANK_CONNECTION_DATE,
        B.HAS_CHIME_SPOTME_L30D,
        B.LOWEST_CHIME_BAL_L30D_AMT_USD,
        CASE
            WHEN B.HAS_CHIME_SPOTME_L30D > 0 THEN 1
            ELSE 0
        END AS IF_USE_COMPETITOR
        'CHIME' AS COMPETITOR,
        C.USER_LABEL
    FROM INACTIVE_MEMBER_GROUP A
    LEFT JOIN MEMBER_CHIME B
    ON A.USER_ID = B.USER_ID
    LEFT JOIN MEMBER_SEGMENT C
    ON A.USER_ID = C.USER_ID
),
INACTIVE_MEMBER_NONCHIME AS
(
    SELECT
        A.USER_ID,
        A.BANK_CONNECTION_DATE,
        B.NONCHIME_COMPETITOR_FUNDING_TXN_N30D_CNT,
        B.NONCHIME_COMPETITOR_FUNDING_TXN_N30D_AMT_USD,
        CASE
            WHEN B.NONCHIME_COMPETITOR_FUNDING_TXN_N30D_CNT > 0 THEN 1
            ELSE 0
        END AS IF_USE_COMPETITOR
        'NONCHIME' AS COMPETITOR,
        C.USER_LABEL
    FROM INACTIVE_MEMBER_GROUP A
    LEFT JOIN MEMBER_NONCHIME B
    ON A.USER_ID = B.USER_ID
    LEFT JOIN MEMBER_SEGMENT C
    ON A.USER_ID = C.USER_ID
)
SELECT * FROM INACTIVE_MEMBER_CHIME
UNION
SELECT * FROM INACTIVE_MEMBER_NONCHIME