--Bank connection user

WITH MEMBER_CHIME AS
(
    SELECT
        USER_ID,
        HAS_CHIME_SPOTME_L30D,
        LOWEST_CHIME_BAL_L30D_AMT_USD
    FROM DBT.ADV_CHURN_MARTS.FCT_CHIME_NEG_BAL
    WHERE REF_DATE = CURRENT_DATE() -1
),
MEMBER_NONCHIME AS
(
    SELECT
        USER_ID,
        NONCHIME_COMPETITOR_FUNDING_TXN_N30D_CNT,
        NONCHIME_COMPETITOR_FUNDING_TXN_N30D_AMT_USD
    FROM DBT.ADV_CHURN_MARTS.FCT_NONCHIME_COMPETITOR_TXN
    WHERE


),
BANK_CONNECTION_NEWUSER AS
(
    SELECT
        USER_ID,
        MIN(INITIAL_PULL) AS BANK_CONNECTION_DATE
    FROM APPLICATION_DB.GOOGLE_CLOUD_MYSQL_DAVE.BANK_CONNECTION
    WHERE INITIAL_PULL >= DATEADD('DAY', -31, CURRENT_DATE())
    GROUP BY USER_ID
),
NEW_MEMBER AS
(
    SELECT
        A.USER_ID,
        A.BANK_CONNECTION_DATE,
        B.IS_APPROVED,
        B.IS_DISBURSED
    FROM BANK_CONNECTION_NEWUSER A
    JOIN ANALYTIC_DB.DBT_MARTS.REQUESTS B
    ON A.USER_ID = B.USER_ID
),
NEW_MEMBER_GROUP AS
(
    SELECT
        USER_ID,
        BANK_CONNECTION_DATE,
        SUM(IS_APPROVED) AS IS_APPROVED_SUM,
        SUM(IS_DISBURSED) AS IS_DISBURSED_SUM
    FROM NEW_MEMBER
    GROUP BY USER_ID, BANK_CONNECTION_DATE
),
NEW_MEMBER_CHIME AS
(
    SELECT
        A.USER_ID,
        A.BANK_CONNECTION_DATE,
        CASE
            WHEN IS_APPROVED_SUM = 0 THEN 'NOT_APPROVED'
            WHEN IS_DISBURSED_SUM = 0 THEN 'NOT_TAKEN'
            ELSE 'TAKEN'
        END AS NEW_MEMBER_CATEGORY,
        B.HAS_CHIME_SPOTME_L30D,
        B.LOWEST_CHIME_BAL_L30D_AMT_USD,
        CASE
            WHEN B.HAS_CHIME_SPOTME_L30D > 0 THEN 1
            ELSE 0
        END AS IF_USE_COMPETITOR
    'CHIME' AS COMPETITOR
    FROM NEW_MEMBER_GROUP A
    LEFT JOIN MEMBER_CHIME B
    ON A.USER_ID = B.USER_ID
),
NEW_MEMBER_NONCHIME AS
(
    SELECT
        A.USER_ID,
        A.BANK_CONNECTION_DATE,
        CASE
            WHEN IS_APPROVED_SUM = 0 THEN 'NOT_APPROVED'
            WHEN IS_DISBURSED_SUM = 0 THEN 'NOT_TAKEN'
            ELSE 'TAKEN'
        END AS NEW_MEMBER_CATEGORY,
        B.NONCHIME_COMPETITOR_FUNDING_TXN_N30D_CNT,
        B.NONCHIME_COMPETITOR_FUNDING_TXN_N30D_AMT_USD,
        CASE
            WHEN B.NONCHIME_COMPETITOR_FUNDING_TXN_N30D_CNT > 0 THEN 1
            ELSE 0
        END AS IF_USE_COMPETITOR
    'NONCHIME' AS COMPETITOR
    FROM NEW_MEMBER_GROUP A
    LEFT JOIN MEMBER_NONCHIME B
    ON A.USER_ID = B.USER_ID
)
SELECT * FROM NEW_MEMBER_CHIME
UNION
SELECT * FROM NEW_MEMBER_NONCHIME