DROP table IF EXISTS DBT.DEV_YANCHUN_PUBLIC.multi_draw_raw;
CREATE TABLE  DBT.DEV_YANCHUN_PUBLIC.multi_draw_raw AS
WITH USERSET AS
(
    SELECT
        USER_ID,
        DATE(PV_TS) AS STARTDATE
    FROM ANALYTIC_DB.DBT_marts.new_user_attribution
    WHERE STARTDATE > DATE('2022-12-15')
),
ADVANCE AS
(
    SELECT
        USERSET.USER_ID AS USER_ID,
        DISBURSEMENT_DS_PST AS FUNDING_DATE,
        'ADVANCE_DAVE' AS FUNDING_NAME,
        MAX_APPROVED_AMOUNT AS R_AMOUNT,
        TAKEN_AMOUNT AS T_AMOUNT
    from ANALYTIC_DB.DBT_MARTS.disbursements disburse
    join USERSET
    ON disburse.USER_ID = USERSET.USER_ID
    WHERE DISBURSEMENT_DS_PST > DATE('2022-12-15') AND PRODUCT='Extra Cash'
),
CHIME AS
(
    SELECT
        USER_ID,
        BALANCE_TIME AS FUNDING_DATE,
        'CHIME' AS FUNDING_NAME,
        0 AS R_AMOUNT,
        BALANCE_VALUE AS T_AMOUNT
    --FROM DBT.DEV_YANCHUN_PUBLIC.multi_draw_chime_dedup_update
    FROM DBT.DEV_YANCHUN_PUBLIC.multi_draw_chime_dedup

),
NONCHIME AS
(
    SELECT
        USER_ID,
        TRANSACTION_DATE AS FUNDING_DATE,
        NONCHIME_COMPETITOR_NAME AS FUNDING_NAME,
        0 AS R_AMOUNT,
        ADVANCE_VOLUME AS T_AMOUNT
    FROM DBT.DEV_YANCHUN_PUBLIC.multi_draw_nonchime_dedup
),
TMP AS
(
    SELECT * FROM ADVANCE
    UNION ALL
    SELECT * FROM CHIME
    UNION ALL
    SELECT * FROM NONCHIME
),
TMP1 AS
(
SELECT
    USER_ID,
    FUNDING_DATE,
    FUNDING_NAME,
    R_AMOUNT,
    T_AMOUNT,
    CASE
        WHEN FUNDING_NAME = 'ADVANCE_DAVE' THEN 1
        ELSE 0
    END AS LABEL
FROM TMP
ORDER BY USER_ID, FUNDING_DATE, FUNDING_NAME
)
SELECT
    USER_ID,
    FUNDING_DATE,
    FUNDING_NAME,
    R_AMOUNT,
    T_AMOUNT,
    SUM(LABEL) over (PARTITION BY USER_ID order by FUNDING_DATE asc rows between unbounded preceding and current row) AS ordernumber
FROM TMP1
