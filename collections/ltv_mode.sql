WITH LONGTMP AS
(
    SELECT
        DATE_TRUNC('month', DATE(STARTDATE)) AS STARTMONTH,
        AVG(REALREVENUE) AS REALARPU,
        AVG(CASE WHEN PREDICT < 0 THEN 0 ELSE PREDICT END) AS ARPU,
        AVG(LG_PREDICT_RETENTION) AS PREDICTRETENTION,
        SUM(CASE WHEN REALREVENUE > 0 THEN 1 ELSE 0 END)/COUNT(DISTINCT USER_ID) AS REALRETENTION
    FROM ANALYTIC_DB.MODEL_OUTPUT.ltvlong_forecast_result
    WHERE FORECASTDATE = DATE_TRUNC('month', CURRENT_DATE())
        AND FIRST_TRANS IS NOT NULL
    GROUP BY STARTMONTH
    ORDER BY STARTMONTH
 )
 ,
 LONG_REVENUE AS
 (
   SELECT STARTMONTH, AVG(REALIZED) AS RE_AVENUE FROM
   (
    SELECT
        TRANS.USER_ID,
        DATE_TRUNC('month', DATE(USERS.STARTDATE)) AS STARTMONTH,
        SUM(TRANS.REVENUE) AS REALIZED
    FROM  ANALYTIC_DB.DBT_METRICS.USER_DAILY_CREDIT_REV TRANS JOIN ANALYTIC_DB.DBT_METRICS.LTV_USER USERS
        ON TRANS.USER_ID = USERS.USER_ID
    WHERE TRANS.TRANS_TIME < DATE_TRUNC('month', CURRENT_DATE())
    GROUP BY STARTMONTH, TRANS.USER_ID
    ) AS A
    GROUP BY STARTMONTH
 )
 ,
LONGTERMRESULT AS
(
    SELECT
        TMP.STARTMONTH,
        (1-POW(TMP.PREDICTRETENTION, 10))/(1 - TMP.PREDICTRETENTION) * TMP.ARPU + REVENUE.RE_AVENUE AS LTV,
        REVENUE.RE_AVENUE AS CULREVENUE
    FROM LONGTMP AS TMP JOIN LONG_REVENUE AS REVENUE
        ON TMP.STARTMONTH = REVENUE.STARTMONTH
    ORDER BY TMP.STARTMONTH
)
,
SHORTTMP AS
(
    SELECT
        DATE_TRUNC('month', DATE(STARTDATE)) AS STARTMONTH,
        AVG(REVENUE) AS REALARPU,
        AVG(CASE WHEN PREDICT < 0 THEN 0 ELSE PREDICT END) AS ARPU,
        AVG(LG_PREDICT_RETENTION) AS PREDICTRETENTION,
        SUM(CASE WHEN REVENUE > 0 THEN 1 ELSE 0 END)/COUNT(DISTINCT USER_ID) AS REALRETENTION
    FROM ANALYTIC_DB.MODEL_OUTPUT.ltvshort_forecast_result
    WHERE FORECASTDATE = DATE_TRUNC('month', CURRENT_DATE())
        AND FIRST_TRANS IS NOT NULL
    GROUP BY STARTMONTH
    ORDER BY STARTMONTH
 )
 ,
 SHORT_REVENUE AS
 (
   SELECT STARTMONTH, AVG(REALIZED) AS RE_AVENUE FROM
   (
    SELECT
        TRANS.USER_ID,
        DATE_TRUNC('month', DATE(USERS.STARTDATE)) AS STARTMONTH,
        SUM(TRANS.REVENUE) AS REALIZED
    FROM ANALYTIC_DB.DBT_METRICS.USER_DAILY_CREDIT_REV TRANS JOIN ANALYTIC_DB.DBT_METRICS.LTV_USER USERS
        ON TRANS.USER_ID = USERS.USER_ID
    WHERE TRANS_TIME < DATE_TRUNC('month', CURRENT_DATE())
    GROUP BY STARTMONTH, TRANS.USER_ID
    ) AS A
    GROUP BY STARTMONTH
 )
 ,
SHORTTERMRESULT AS
(
    SELECT
        TMP.STARTMONTH,
        (1-POW(TMP.PREDICTRETENTION, 10))/(1 - TMP.PREDICTRETENTION) * TMP.ARPU + REVENUE.RE_AVENUE AS LTV,
        REVENUE.RE_AVENUE AS CULREVENUE
    FROM SHORTTMP AS TMP
    JOIN SHORT_REVENUE AS REVENUE
    ON TMP.STARTMONTH = REVENUE.STARTMONTH
    WHERE date(TMP.STARTMONTH) != DATEADD('month', -1, date_trunc('month', current_date()))
    ORDER BY TMP.STARTMONTH
)
,
STATSTMP AS
(
    SELECT
        USER_ID,
        T_VALUE,
        TOTALREVENUE,
        CASE
            WHEN PRED_NUM < 1 THEN 1
            ELSE 0
        END AS CHURN,
        DATE_TRUNC('month', DATE(STARTDATE)) AS START_MONTH
    FROM ANALYTIC_DB.MODEL_OUTPUT.STATISTICAL_FORECAST_RESULT
    WHERE START_MONTH IS NOT NULL AND FORECASTDATE = DATE_TRUNC('month', CURRENT_DATE())
)
,
STATSRESULT AS
(
    SELECT
        START_MONTH,
        (AVG(T_VALUE) * COUNT(DISTINCT USER_ID) / (SUM(CHURN) + 0.00001) + SUM(TOTALREVENUE) / COUNT(DISTINCT USER_ID))AS LTV,
        SUM(TOTALREVENUE) / COUNT(DISTINCT USER_ID) AS CULREVENUE
    FROM STATSTMP
    WHERE START_MONTH < DATEADD('month', -2, DATE_TRUNC('month', current_date()))
    GROUP BY START_MONTH
    ORDER BY START_MONTH
)
SELECT *, 'LONG' AS MODEL FROM LONGTERMRESULT
UNION
SELECT *, 'SHORT' AS MODEL FROM SHORTTERMRESULT
UNION
SELECT *, 'STATS' AS MODEL FROM STATSRESULT
